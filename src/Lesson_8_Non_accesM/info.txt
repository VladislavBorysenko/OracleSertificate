Non-access Modifiers

1-final

2-static

3-abstract

    final модификатор может относиться к переменной, делая из неё констанку (variable constant): final int VARIABLE.
    Значение константы не меняеться и остаётся постоянным.

final может относиться к методу(final method name) и классу(final class name).
У констнант не может быть дефолтных значений, их необходимо инициалзировать.

    final variable должны быть инициализированны до их испльзования:
1. при определении переменной
2. каждом конструкторе (если переменная не static)


    static - если перед переменной в классе стоит данный модификатор, это означает что данная переменная пренадлежит всем классу
а не обьекту. она храниться в классе а не в обьекте, и ее может изменять любой обьект и метод данного класса

static бывают как переменные(variables), так и методы(method). Они пренадлежат не обьекту, а только классу
static переменные могут быть использованны без саздания обьекта класса

В не статических методах, мы можем использовать статические переменные.
Статические методы не зависят от обьекта. Их можно вызывать не создавая обьект класса
Так-же мі не можем использовать non-static переменные в static методах

static элементы: переменные и мтеоды не могут вызывать, обращаться к instance переменным и методам
(instance переменные и методы-переменные и методы, которые относятся к объектам (экземплярам) созданным на основании класса. )

к static элементам принято обращаться используя имя класса, а не ссылку на созданный обьект.

static final- Мы не можем определить значение статической константы в конструкторе класса
Её необходимо определять при создании
так же мы можем на прямую использовать константы не создавая обьекта класса.
