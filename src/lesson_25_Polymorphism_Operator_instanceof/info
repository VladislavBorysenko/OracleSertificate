_____________________________________________POLYMORPHISM_______________________________________________________________
Дословный перевод слова "Полиморфизм"-множество форм.
Полиморфизм- это способность обьекта принимать несколько форм.
Обьект в JAVA считается полиморфным, если он имеет более 1 связи IS-A.
Полиморфизм это способность метода вести себя по разному в зависимости
от того, обьект какого класса вызывает этот метод

Перезаписанные методы так же называют полиморфными

_________________________________Оператор instanceof____________________________________________________________________
-instanceof(Обьект ли?) проверяет есть ли связь

Car c=new Car();
System.out.println(c instanceof Object);//true

-Оператор instanceof проверяет, есть ли между обьектом и классом/интерфейсом связь IS-A.
Если связь IS-A не возможна, то компилятор  выдает ошибку

___________________________Reference data type casting__________________________________________________________________
-Casting - это процесс когда вы заставляете переменную одного типа данных вести себя как переменная другого типа данных.
Casting возможен только тогда, когда между классами/интерфейсами существует IS-A взаимоотношение.
Делая casting, вы не меняете тип данных обьекта, а заставляете его чувствовать себя как обьект другого типа

 Employee1 emp1 = new Doctor1();
  Doctor1 d1 = (Doctor1) emp1;
         System.out.println(d1.specializaciya);
   или   ((Doctor1) emp1).lechit();

Casting из sub класса в super класс происходит автоматически (UpCasting)
Employee e=new Driver(); (UpCasting)
-Casting из super класса в sub класс НЕ происхолит автоматически (DownCasting)
Driver d=(Driver)e;(DownCasting)
-Если между классами/интерфейсами нет IS-A взаимоотношения, компилятор не допустит casting
-Даже если компилятор допустил casting, выскочит runtime exception, если обьект, который мы  делаем cast на самом деле
не принадлежит классу, который мы его делаем cast.

____________________Primitive data types casting_(Кастинг примитивных типов данных)_____________________________________
расширение
 19 form of widening
byte to short, int ,long, float, or double
short to int ,long, float, or double
char to int, long, float, or double
int to long, float, or double
long to float to double
float to double

сужение
Narrowing without casting происходит, если выполняются три условия:
1. Если int cast-ится в byte, short или char
2. Если значение - int это константа
3. Усли значение int  помещяется в соответствующий тип данных

22 формы сужения
22 forms of narrowing:
short to byte or char
char to byte or short
int to byte, short or char
long to int, byte, short or char
float to byte, short, char, int, or long
double to byte, short, char, int, long

_____________________________Numeric promotion__________________________________________________________________________
Numeric promotion-конвертация меньшего численного типа данных в больший

Numeric promotion происходит в следующих случаях:
-Если имеются 2 значения разных типов данных, java автоматичекси конвертирует меньший числовой тип данных в больший.
-Если одно из значений- это целое число, а другое дробное, java автоматически конвертирует целочисленный тип данных в дробный
-Если значение типов данных byte,short и char участвуют в арифметических операциях, то они перед этим конвертируются
в тип данных int, даже если в данных арефмитических операциях значение типа данных int не участвует.
Исключение: Унарные операторы. Использование ++ к типу данных byte не конвертирует результат оператора в int.
-После применения всех вышеуказанных 3-х правил, когда все операнды стали одного типа данных, результируещее значени,
которое получается после срабатывания всех операторов будет такого же типа данных, что и тип анных операнд
