Разновидности переменных, Индефикаторы в JAVA, Ключевое слово this, Garbage collector


В зависимости от пределов видимости переменные делятся на 4 группы:

1-Local variable. Локальные переменные - это переменные которые созданы внутри метода
-не имеют access modifier
-носят промежуточній характер

2-Parametr. Область видимости параметра, почти совпадает с областью видимости локальной переменной, но немного больше
Область видимости параметра - это вся область метода

3-Instance(object) variable-переменные принадлежат обьекту класса, мы можем использовать их как внутри класса, так и
мнутри метода класса

4-static variable-данная переменная имеет самую большую область видимости. Данная переменная принадлежит всему классу
общая для всех обьектов
-------------------------------------------------------------------------------------------------
        Ключевое слово this
this.-this keyword при использывании с переменными и методами указывает на текущий экземпляр(обьект) класса

this keyword нельзя использовать для обращения к переменным и методам внутри static  метода
 или при присвоении значения static переменной

не статические переменные нельзя использовать в статических методах, так как не статическим переменным нужен обьект класса

Не является ошибочным обращение с помощью this к static элементам (но и не рекомендуется)


Индефикаторы в JAVA
Индефикаторы в JAVA-название переменных, методов , классов, констант
правила именнования переменных
-длина названия не ограничена int aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=5
-должен начинаться с прописной или заглавной буквы,  с символа волют или _ int Aaa=5, int _aaa=6, int $=5
-символы валют и _ могут быть в любой части индефикатора, а цифры везде, кроме начала int _123=5, int a111=6,
-нельзя назівать индефикаторі зарезирвированніми словами

Классаы пишутся с большой буквы
Переменные с маленькой
Метод назыввается как глагол (что-то делать, действие выполняющиеся в этом методе

-Константы пишуться большими буквами

В локальных перемменых нет дефолтных значений. Нам необходимо инициализировать переменную
-------------------------------------------------------------------
Жизнь обьекта заканчивается:
 когда его значение равно null
 когда обьект выходит из скопа (зоны видимости метода, класса, обьекта)
 Если нет обращения к конструктору обьект не сохраниться
----------------------------------------------------------------
Garbage collector-чистильщик
-Мы можем определить какие обьекты будут пригодны для того, что бы Garbage collector собрал их (удалил из памяти)
-Мы не можем конкретнобыть увереными в том, что в определенное время Garbage collector удалит обьект из памяти

-Мы не можем контролировать Garbage collector и управлять им
-Управление Garbage collector-ом лежит на JVM
